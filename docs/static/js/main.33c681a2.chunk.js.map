{"version":3,"sources":["store/utility.js","store/is-empty.js","store/reducers/auth.js","store/actions/actionTypes.js","store/reducers/cart.js","store/reducers/index.js","store.js","store/actions/auth.js","store/actions/index.js","store/actions/cart.js","components/Navigation.js","components/CartModal.js","components/OrderForm.js","components/OverviewDrawer.js","containers/Products.js","pages/Homepage.js","services/products.js","App.js","serviceWorker.js","index.js"],"names":["updateObject","oldObject","updatedValues","setAuthToken","token","axios","defaults","headers","common","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuth","reducer","state","action","type","data","payload","isAdmin","user","cart","cartIds","map","item","id","indexOf","push","filter","rootReducer","combineReducers","auth","authReducer","cartReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","setCurrentUser","decoded","actions","logoutUser","history","dispatch","localStorage","removeItem","login","email","password","authData","post","then","res","setItem","jwtdecode","err","updateCart","clearCart","removeFromCart","useStyles","makeStyles","theme","icon","marginRight","spacing","Navigation","props","classes","Fragment","AppBar","position","Toolbar","className","style","backgroundColor","onClick","openCart","cursor","Typography","variant","color","noWrap","fontSize","Badge","badgeContent","anchorOrigin","vertical","horizontal","ShoppingCart","to","activeStyle","fontWeight","ViewList","paper","width","palette","background","border","boxShadow","shadows","padding","justifyContent","alignItems","flexDirection","overflow","maxHeight","modalItem","display","flexGrow","connect","products","removeCartItem","modal","setModal","setOrderProducts","Modal","open","onClose","aria-labelledby","aria-describedby","Grid","container","i","src","imageUrl","alt","height","float","gutterBottom","component","margin","title","Cancel","htmlColor","quantity","price","toFixed","textAlign","Add","Remove","reduce","acc","val","paddingTop","paddingBottom","Button","size","borderRadius","orderProducts","setOrder","takeTheOrder","takingOrder","loading","order","reset","status","name","address","phoneNumber","marginBottom","marginTop","initialValues","onSubmit","values","a","validationSchema","Yup","shape","required","touched","errors","handleChange","handleBlur","handleSubmit","response","Form","FormGroup","Label","for","Input","onChange","onBlur","ModalFooter","disabled","Spinner","card","cardMedia","cardContent","productInfo","setProductInfo","SwipeableDrawer","anchor","onOpen","xs","sm","md","lg","Card","CardMedia","image","CardContent","cardGrid","Products","productStatus","Container","maxWidth","product","key","description","CardActions","Copyright","align","Date","getFullYear","heroContent","heroButtons","footer","useState","setLoading","useQuery","queryKey","queryFn","Promise","resolve","reject","get","catch","config","onSuccess","onError","cartMapped","useMutation","takeOrder","CssBaseline","paragraph","App","path","Homepage","Boolean","location","hostname","match","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.33c681a2.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues,\n    }\n}\n\nexport const setAuthToken = (token) => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n    } else {\n        delete axios.defaults.headers.common['Authorization']\n    }\n}\n","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;","import { updateObject } from '../utility';\nimport * as actionTypes from '../actions/actionTypes';\nimport isEmpty from '../is-empty';\n\nconst initialState = {\n    isAuth: false\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_SUCCESS:\n            return updateObject(state, action.data);\n        case actionTypes.SET_CURRENT_USER:\n            return updateObject(state, {\n                isAuth: !isEmpty(action.payload),\n                isAdmin: action.payload.isAdmin || false,\n                user: action.payload\n            });\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","export const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const UPDATE_CART = 'UPDATE_CART'\nexport const CLEAR_CART = 'CLEAR_CART'\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART'\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n    cart: [],\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.UPDATE_CART:\n            const cartIds = state.cart.map((item) => item.id)\n            if (cartIds.indexOf(action.payload.id) < 0) {\n                state.cart.push(action.payload)\n            } else {\n                state = {\n                    cart: state.cart.filter(\n                        (item) => item.id !== action.payload.id\n                    ),\n                }\n                state.cart.push(action.payload)\n            }\n            return state\n        case actionTypes.CLEAR_CART:\n            state = {\n                cart: [],\n            }\n            return state\n        case actionTypes.REMOVE_FROM_CART:\n            state = {\n                cart: state.cart.filter(\n                    (item) => item.id !== action.payload.id\n                ),\n            }\n            return state\n        default:\n            return state\n    }\n}\n\nexport default reducer\n","import { combineReducers } from 'redux'\nimport authReducer from './auth'\nimport cartReducer from './cart'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    cart: cartReducer,\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './store/reducers'\n\nconst composeEnhancers =\n    (typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store\n","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\nimport { setAuthToken } from '../utility'\nimport jwtdecode from 'jwt-decode'\n\nexport const authSuccess = (authData) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        data: authData,\n    }\n}\n\nexport const logoutUser = (history) => (dispatch) => {\n    localStorage.removeItem('token')\n    setAuthToken(false)\n    dispatch(setCurrentUser({}))\n}\n\nexport const setCurrentUser = (decoded) => {\n    return {\n        type: actionTypes.SET_CURRENT_USER,\n        payload: decoded,\n    }\n}\n\nexport const login = (email, password) => {\n    return (dispatch) => {\n        const authData = {\n            email: email,\n            password: password,\n        }\n        axios.post('/login', authData).then((res) => {\n            const { token } = res.data\n            localStorage.setItem('token', token)\n            setAuthToken(token)\n            try {\n                const decoded = jwtdecode(token)\n                dispatch(setCurrentUser(decoded))\n            } catch (err) {\n                dispatch(setCurrentUser({}))\n            }\n        })\n    }\n}\n","import { logoutUser, login, setCurrentUser } from './auth'\n\nimport { updateCart, clearCart, removeFromCart } from './cart'\n\nconst actions = {\n    logoutUser,\n    login,\n    setCurrentUser,\n    updateCart,\n    clearCart,\n    removeFromCart,\n}\n\nexport default actions\n","import * as actionTypes from './actionTypes'\n\nexport const updateCart = (data) => {\n    return {\n        type: actionTypes.UPDATE_CART,\n        payload: data,\n    }\n}\n\nexport const removeFromCart = (data) => {\n    return {\n        type: actionTypes.REMOVE_FROM_CART,\n        payload: data,\n    }\n}\n\nexport const clearCart = () => {\n    return {\n        type: actionTypes.CLEAR_CART,\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { AppBar, Toolbar, Typography, Badge } from '@material-ui/core'\nimport { ShoppingCart, ViewList } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(1),\n    },\n}))\n\nconst Navigation = (props) => {\n    const classes = useStyles()\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"relative\">\n                <Toolbar\n                    className=\"justify-content-end\"\n                    style={{ backgroundColor: '#ff8700' }}\n                >\n                    {/* <NavLink\n                        exact\n                        to=\"/\"\n                        className=\"nav-link\"\n                        activeStyle={{\n                            fontWeight: 'bold',\n                            color: '#ff8888',\n                        }}\n                    >\n                        <Typography\n                            variant=\"caption\"\n                            color=\"inherit\"\n                            noWrap\n                            className=\"align-items-center\"\n                            style={{ fontSize: 14 }}\n                        >\n                            <Home className={classes.icon} />\n                            <span>Homepage</span>\n                        </Typography>\n                    </NavLink> */}\n                    <span\n                        onClick={props.openCart}\n                        className=\"nav-link\"\n                        style={{ cursor: 'pointer' }}\n                    >\n                        <Typography\n                            variant=\"caption\"\n                            color=\"inherit\"\n                            noWrap\n                            className=\"align-items-center\"\n                            style={{ fontSize: 14 }}\n                        >\n                            <Badge\n                                badgeContent={props.cart.length}\n                                color=\"secondary\"\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'left',\n                                }}\n                            >\n                                <ShoppingCart className={classes.icon} />\n                            </Badge>\n                            <span>Cart</span>\n                        </Typography>\n                    </span>\n                    {props.isAuth && (\n                        <NavLink\n                            to=\"/orders\"\n                            className=\"nav-link\"\n                            activeStyle={{\n                                fontWeight: 'bold',\n                                color: '#ff8888',\n                            }}\n                        >\n                            <Typography\n                                variant=\"caption\"\n                                color=\"inherit\"\n                                noWrap\n                                className=\"align-items-center\"\n                                style={{ fontSize: 14 }}\n                            >\n                                <ViewList className={classes.icon} />\n                                <span>Orders</span>\n                            </Typography>\n                        </NavLink>\n                    )}\n                    {/* <NavLink\n                        to=\"/login\"\n                        className=\"nav-link\"\n                        activeStyle={{\n                            fontWeight: 'bold',\n                            color: '#ff8888',\n                        }}\n                    >\n                        <Typography\n                            variant=\"caption\"\n                            color=\"inherit\"\n                            noWrap\n                            className=\"align-items-center\"\n                            style={{ fontSize: 14 }}\n                        >\n                            <Laptop className={classes.icon} />\n                            <span>Login</span>\n                        </Typography>\n                    </NavLink> */}\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Navigation\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport actions from '../store/actions/index'\nimport { Modal, Typography, Button, Grid } from '@material-ui/core'\nimport {\n    Add as AddIcon,\n    Remove as RemoveIcon,\n    Cancel as CancelIcon,\n} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: '80%',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 8, 3),\n        justifyContent: 'center',\n        alignItems: 'stretch',\n        flexDirection: 'column',\n        overflow: 'auto',\n        maxHeight: '500px',\n    },\n    modalItem: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1,\n        padding: '8px 15px',\n    },\n}))\n\nconst CartModal = (props) => {\n    const { modal, setModal, setOrderProducts } = props\n    const classes = useStyles()\n    return (\n        <Modal\n            open={modal}\n            onClose={() => setModal(!modal)}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            style={{\n                display: 'flex',\n                flexGrow: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            <Grid container className={classes.paper}>\n                {props.cart.length > 0 ? (\n                    props.cart.map((item, i) => (\n                        <div className={classes.modalItem}>\n                            <div>\n                                <img\n                                    src={item.imageUrl}\n                                    alt=\"\"\n                                    style={{\n                                        height: '100px',\n                                        float: 'right',\n                                        marginRight: '24px',\n                                    }}\n                                />\n                            </div>\n                            <div>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <Typography\n                                        gutterBottom\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                        style={{\n                                            display: 'inline-block',\n                                            margin: '0',\n                                            marginRight: '16px',\n                                        }}\n                                    >\n                                        {item.title}\n                                    </Typography>\n                                    <span\n                                        onClick={() =>\n                                            props.removeCartItem(item)\n                                        }\n                                        style={{ cursor: 'pointer' }}\n                                    >\n                                        <CancelIcon htmlColor=\"#f50057\" />\n                                    </span>\n                                </div>\n                                <p>\n                                    {item.quantity} x ${item.price} = $\n                                    {(item.quantity * item.price).toFixed(2)}\n                                </p>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-between',\n                                        width: '100px',\n                                    }}\n                                >\n                                    <span\n                                        component=\"span\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            textAlign: 'center',\n                                            marginRight: '12px',\n                                        }}\n                                        onClick={() => {\n                                            const quantity = item.quantity + 1\n                                            props.updateCart({\n                                                ...item,\n                                                quantity,\n                                            })\n                                        }}\n                                    >\n                                        <AddIcon color=\"primary\" />\n                                    </span>\n                                    <span\n                                        style={{\n                                            display: 'flex',\n                                            justifyContent: 'center',\n                                            alignItems: 'center',\n                                            marginRight: '12px',\n                                        }}\n                                    >\n                                        {item.quantity}\n                                    </span>\n                                    <span\n                                        style={{\n                                            cursor: 'pointer',\n                                            textAlign: 'center',\n                                        }}\n                                        onClick={() => {\n                                            const quantity = item.quantity - 1\n                                            if (quantity >= 1) {\n                                                props.updateCart({\n                                                    ...item,\n                                                    quantity,\n                                                })\n                                            }\n                                        }}\n                                    >\n                                        <RemoveIcon color=\"primary\" />\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <div className={classes.modalItem}>No items in cart</div>\n                )}\n                {props.cart.length > 0 ? (\n                    <div\n                        style={{\n                            textAlign: 'center',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n                        }}\n                    >\n                        <div>Shipping: $10</div>\n                        <div\n                            className={classes.modalItem}\n                            style={{\n                                width: '350px',\n                            }}\n                        >\n                            {props.cart.length > 1\n                                ? `Total: ${props.cart\n                                      .reduce((acc, val) => {\n                                          return (\n                                              acc.price * acc.quantity +\n                                              val.price * val.quantity\n                                          )\n                                      })\n                                      .toFixed(2)} + $10 (shipping) = ${(\n                                      props.cart.reduce((acc, val) => {\n                                          return (\n                                              acc.price * acc.quantity +\n                                              val.price * val.quantity\n                                          )\n                                      }) + 10\n                                  ).toFixed(2)}`\n                                : `Total: ${(\n                                      props.cart[0].price *\n                                      props.cart[0].quantity\n                                  ).toFixed(2)} + $10 (shipping) = ${(\n                                      props.cart[0].price *\n                                          props.cart[0].quantity +\n                                      10\n                                  ).toFixed(2)}`}\n                        </div>\n                    </div>\n                ) : null}\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        paddingTop: '12px',\n                        paddingBottom: '12px',\n                    }}\n                >\n                    {props.cart.length > 0 ? (\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"large\"\n                            onClick={() => setOrderProducts(true)}\n                            style={{ marginRight: '16px' }}\n                        >\n                            Take an order\n                        </Button>\n                    ) : null}\n                    <Button\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        size=\"large\"\n                        onClick={() => setModal(false)}\n                    >\n                        Close\n                    </Button>\n                </div>\n            </Grid>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.cart,\n    ...state.auth,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCart: (products) => dispatch(actions.updateCart(products)),\n        clearCart: () => dispatch(actions.clearCart()),\n        removeCartItem: (item) => dispatch(actions.removeFromCart(item)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartModal)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport actions from '../store/actions/index'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { Modal, Typography, Button } from '@material-ui/core'\nimport { ModalFooter, Form, FormGroup, Input, Label, Spinner } from 'reactstrap'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    modalItem: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1,\n        border: '1px solid black',\n        padding: '8px 15px',\n        borderRadius: '5px',\n    },\n}))\n\nconst OrderForm = (props) => {\n    const {\n        orderProducts,\n        setOrderProducts,\n        setOrder,\n        takeTheOrder,\n        takingOrder,\n        loading,\n        order,\n    } = props\n    const classes = useStyles()\n    return (\n        <Modal\n            open={!!orderProducts}\n            onClose={() => {\n                setOrderProducts(null)\n                takingOrder.reset()\n            }}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            style={{\n                display: 'flex',\n                flexGrow: 1,\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            {takingOrder.status === 'success' ? (\n                <div\n                    style={{\n                        backgroundColor: 'white',\n                        textAlign: 'center',\n                        padding: '48px',\n                    }}\n                >\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Taking the order was successful!\n                    </Typography>\n                    <Typography>Your order:</Typography>\n                    <p style={{ margin: '0' }}>Name: {order && order.name}</p>\n                    <p style={{ margin: '0' }}>\n                        Address: {order && order.address}\n                    </p>\n                    <p style={{ margin: '0' }}>\n                        Phone number: {order && order.phoneNumber}\n                    </p>\n                    <div\n                        style={{\n                            maxHeight: '400px',\n                            overflow: 'auto',\n                            marginBottom: '16px',\n                        }}\n                    >\n                        <p\n                            style={{\n                                marginBottom: '0',\n                                marginTop: '16px',\n                            }}\n                        >\n                            Products:\n                        </p>\n                        {props.cart.map((item, i) => (\n                            <div className={classes.modalItem}>\n                                <div>\n                                    <p style={{ margin: '0' }}>{item.title}</p>\n                                    <p style={{ margin: '0' }}>\n                                        {item.quantity} x ${item.price} = $\n                                        {(item.quantity * item.price).toFixed(\n                                            2\n                                        )}\n                                    </p>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div>\n                        {props.cart.length > 1\n                            ? `Total: ${props.cart\n                                  .reduce((acc, val) => {\n                                      return (\n                                          acc.price * acc.quantity +\n                                          val.price * val.quantity\n                                      )\n                                  })\n                                  .toFixed(2)} + $10 (shipping) = ${(\n                                  props.cart.reduce((acc, val) => {\n                                      return (\n                                          acc.price * acc.quantity +\n                                          val.price * val.quantity\n                                      )\n                                  }) + 10\n                              ).toFixed(2)}`\n                            : props.cart.length === 1\n                            ? `Total: ${(\n                                  props.cart[0].price * props.cart[0].quantity\n                              ).toFixed(2)} + $10 (shipping) = ${(\n                                  props.cart[0].price * props.cart[0].quantity +\n                                  10\n                              ).toFixed(2)}`\n                            : null}\n                    </div>\n                    <Button\n                        color=\"secondary\"\n                        onClick={() => {\n                            setOrderProducts(null)\n                            props.clearCart()\n                            takingOrder.reset()\n                        }}\n                    >\n                        Close\n                    </Button>\n                </div>\n            ) : takingOrder.status !== 'loading' ? (\n                <Formik\n                    initialValues={{\n                        name: '',\n                        address: '',\n                        phoneNumber: '',\n                    }}\n                    onSubmit={async (values, actions) => {\n                        setOrder({ ...values, products: props.cart })\n                        takeTheOrder(values)\n                    }}\n                    validationSchema={Yup.object().shape({\n                        name: Yup.string().required(),\n                        address: Yup.string().required(),\n                        phoneNumber: Yup.string().required(),\n                    })}\n                >\n                    {(props) => {\n                        const {\n                            values,\n                            touched,\n                            errors,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                        } = props\n                        const { response } = errors\n                        return (\n                            <Form\n                                onSubmit={handleSubmit}\n                                style={{\n                                    padding: '24px',\n                                    backgroundColor: 'white',\n                                }}\n                            >\n                                <FormGroup>\n                                    <Label for={'name'}>Name</Label>\n                                    <Input\n                                        name=\"name\"\n                                        type=\"text\"\n                                        value={values.name}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    {errors.name && touched.name && (\n                                        <div\n                                            style={{\n                                                color: 'orangered',\n                                            }}\n                                        >\n                                            {errors.name}\n                                        </div>\n                                    )}\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for={'address'}>Address</Label>\n                                    <Input\n                                        name=\"address\"\n                                        type=\"text\"\n                                        value={values.address}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    {errors.address && touched.address && (\n                                        <div\n                                            style={{\n                                                color: 'orangered',\n                                            }}\n                                        >\n                                            {errors.address}\n                                        </div>\n                                    )}\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for={'phoneNumber'}>\n                                        Phone number\n                                    </Label>\n                                    <Input\n                                        name=\"phoneNumber\"\n                                        type=\"text\"\n                                        value={values.phoneNumber}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                    />\n                                    {errors.phoneNumber && touched.phoneNumber && (\n                                        <div\n                                            style={{\n                                                color: 'orangered',\n                                            }}\n                                        >\n                                            {errors.phoneNumber}\n                                        </div>\n                                    )}\n                                </FormGroup>\n                                {response && (\n                                    <div style={{ color: 'orangered' }}>\n                                        {response}\n                                    </div>\n                                )}\n                                <ModalFooter>\n                                    <Button\n                                        color=\"primary\"\n                                        onClick={handleSubmit}\n                                        disabled={loading}\n                                    >\n                                        Order!\n                                    </Button>{' '}\n                                    <Button\n                                        color=\"secondary\"\n                                        onClick={() => setOrderProducts(false)}\n                                        disabled={loading}\n                                    >\n                                        Cancel\n                                    </Button>\n                                </ModalFooter>\n                            </Form>\n                        )\n                    }}\n                </Formik>\n            ) : takingOrder.status === 'loading' ? (\n                <div\n                    style={{\n                        backgroundColor: 'white',\n                        height: '200px',\n                        width: '200px',\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Spinner color=\"danger\" />\n                </div>\n            ) : null}\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.cart,\n    ...state.auth,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCart: (products) => dispatch(actions.updateCart(products)),\n        clearCart: () => dispatch(actions.clearCart()),\n        removeCartItem: (item) => dispatch(actions.removeFromCart(item)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderForm)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport actions from '../store/actions/index'\nimport {\n    SwipeableDrawer,\n    Grid,\n    Card,\n    CardMedia,\n    CardContent,\n    Typography,\n    Button,\n} from '@material-ui/core'\nimport { Add as AddIcon, Remove as RemoveIcon } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}))\n\nconst OverviewDrawer = (props) => {\n    const { productInfo, setProductInfo } = props\n    const classes = useStyles()\n    return (\n        <SwipeableDrawer\n            anchor={'bottom'}\n            open={!!productInfo}\n            onClose={() => setProductInfo(null)}\n            onOpen={() => setProductInfo(productInfo)}\n        >\n            <div\n                component=\"children\"\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    padding: '12px',\n                }}\n            >\n                <Grid item xs={12} sm={6} md={4} lg={3}>\n                    <Card\n                        className={classes.card}\n                        // style={{ padding: '12px' }}\n                    >\n                        <CardMedia\n                            className={classes.cardMedia}\n                            image={productInfo ? productInfo.imageUrl : '/'}\n                            title=\"Pizza\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                            <Typography\n                                gutterBottom\n                                variant=\"h5\"\n                                component=\"h2\"\n                            >\n                                {productInfo && productInfo.title}\n                            </Typography>\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'space-between',\n                                }}\n                            >\n                                <Typography>\n                                    {productInfo && productInfo.price}\n                                </Typography>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        justifyContent: 'space-between',\n                                    }}\n                                >\n                                    <span\n                                        component=\"span\"\n                                        style={{\n                                            cursor: 'pointer',\n                                            textAlign: 'center',\n                                            marginRight: '12px',\n                                        }}\n                                        onClick={() => {\n                                            const quantity =\n                                                productInfo.quantity + 1\n                                            setProductInfo({\n                                                ...productInfo,\n                                                quantity,\n                                            })\n                                        }}\n                                    >\n                                        <AddIcon color=\"primary\" />\n                                    </span>\n                                    <span\n                                        style={{\n                                            display: 'flex',\n                                            justifyContent: 'center',\n                                            alignItems: 'center',\n                                            marginRight: '12px',\n                                        }}\n                                    >\n                                        {productInfo && productInfo.quantity}\n                                    </span>\n                                    <span\n                                        style={{\n                                            cursor: 'pointer',\n                                            textAlign: 'center',\n                                        }}\n                                        onClick={() => {\n                                            const quantity =\n                                                productInfo.quantity - 1\n                                            if (quantity >= 1) {\n                                                setProductInfo({\n                                                    ...productInfo,\n                                                    quantity,\n                                                })\n                                            }\n                                        }}\n                                    >\n                                        <RemoveIcon color=\"primary\" />\n                                    </span>\n                                </div>\n                            </div>\n                            <Typography\n                                style={{\n                                    textAlign: 'center',\n                                    marginTop: '24px',\n                                }}\n                            >\n                                Total:{' '}\n                                {productInfo &&\n                                    (\n                                        productInfo.quantity * productInfo.price\n                                    ).toFixed(2)}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </div>\n            <div\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    paddingBottom: '24px',\n                }}\n            >\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={() => {\n                        props.updateCart(productInfo)\n                        return setProductInfo(null)\n                    }}\n                    style={{ marginRight: '16px' }}\n                >\n                    Add to cart\n                </Button>\n                <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    size=\"large\"\n                    onClick={() => setProductInfo(null)}\n                >\n                    Close\n                </Button>\n            </div>\n        </SwipeableDrawer>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.cart,\n    ...state.auth,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCart: (products) => dispatch(actions.updateCart(products)),\n        clearCart: () => dispatch(actions.clearCart()),\n        removeCartItem: (item) => dispatch(actions.removeFromCart(item)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OverviewDrawer)\n","import React from 'react'\nimport {\n    Typography,\n    Button,\n    Grid,\n    Container,\n    Card,\n    CardMedia,\n    CardContent,\n    CardActions,\n} from '@material-ui/core'\nimport { Spinner } from 'reactstrap'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n}))\n\nconst Products = (props) => {\n    const { productStatus, products, setProductInfo } = props\n    const classes = useStyles()\n    return (\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n            <Grid container spacing={4}>\n                {productStatus === 'success' ? (\n                    products.map((product) => (\n                        <Grid item key={product.id} xs={12} sm={6} md={4}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                    className={classes.cardMedia}\n                                    image={product.imageUrl}\n                                    title=\"Image title\"\n                                />\n                                <CardContent className={classes.cardContent}>\n                                    <Typography\n                                        gutterBottom\n                                        variant=\"h5\"\n                                        component=\"h2\"\n                                    >\n                                        {product.title}\n                                    </Typography>\n                                    <Typography>\n                                        {product.description}\n                                    </Typography>\n                                    <Typography color=\"primary\">\n                                        ${product.price}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button\n                                        size=\"small\"\n                                        color=\"primary\"\n                                        onClick={() =>\n                                            setProductInfo({\n                                                ...product,\n                                                quantity: 1,\n                                            })\n                                        }\n                                    >\n                                        View\n                                    </Button>\n                                    {props.isAuth && (\n                                        <Button size=\"small\" color=\"primary\">\n                                            Edit\n                                        </Button>\n                                    )}\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))\n                ) : productStatus === 'loading' ? (\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexGrow: 1,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <Spinner color=\"danger\" />\n                    </div>\n                ) : productStatus === 'error' ? (\n                    <p>Error occurs</p>\n                ) : null}\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Products\n","import React, { useState } from 'react'\nimport { useQuery, useMutation } from 'react-query'\nimport { connect } from 'react-redux'\nimport {\n    CssBaseline,\n    Typography,\n    Container,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getProducts, takeOrder } from '../services/products'\nimport actions from '../store/actions/index'\nimport Navigation from '../components/Navigation'\nimport CartModal from '../components/CartModal'\nimport OrderForm from '../components/OrderForm'\nimport OverviewDrawer from '../components/OverviewDrawer'\nimport Products from '../containers/Products'\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}))\n\nconst Homepage = (props) => {\n    const [modal, setModal] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [orderProducts, setOrderProducts] = useState(false)\n    const [order, setOrder] = useState(null)\n    const [productInfo, setProductInfo] = useState(null)\n    const classes = useStyles()\n\n    const { data: products, status: productStatus } = useQuery({\n        queryKey: 'products',\n        queryFn: async () => await getProducts(),\n        config: {\n            onSuccess: (data) => {\n                setLoading(false)\n            },\n            onError: (err) => {\n                setLoading(false)\n            },\n        },\n    })\n\n    const cartMapped = props.cart.map((item) => ({\n        id: item.id,\n        quantity: item.quantity,\n    }))\n\n    const [takeTheOrder, takingOrder] = useMutation(\n        (data) => takeOrder({ ...data, products: cartMapped }),\n        {\n            onSuccess: () => {\n                setModal(false)\n                setProductInfo(false)\n                props.clearCart()\n            },\n            onError: () => {\n                setLoading(false)\n            },\n        }\n    )\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <CartModal\n                modal={modal}\n                setModal={setModal}\n                setOrderProducts={setOrderProducts}\n            />\n            <OrderForm\n                orderProducts={orderProducts}\n                setOrderProducts={setOrderProducts}\n                setOrder={setOrder}\n                takeTheOrder={takeTheOrder}\n                takingOrder={takingOrder}\n                loading={loading}\n                order={order}\n            />\n            <OverviewDrawer\n                productInfo={productInfo}\n                setProductInfo={setProductInfo}\n            />\n            <header>\n                <Navigation {...props} openCart={() => setModal(true)} />\n            </header>\n            <main>\n                <div className={classes.heroContent}>\n                    <Container maxWidth=\"sm\">\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h2\"\n                            align=\"center\"\n                            color=\"textPrimary\"\n                            gutterBottom\n                        >\n                            The Yummi Pizza\n                        </Typography>\n                        <Typography\n                            variant=\"h5\"\n                            align=\"center\"\n                            color=\"textSecondary\"\n                            paragraph\n                        >\n                            Your best decision!\n                        </Typography>\n                    </Container>\n                </div>\n                <Products\n                    products={products}\n                    setProductInfo={setProductInfo}\n                    productStatus={productStatus}\n                />\n            </main>\n            <footer className={classes.footer}>\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    The Yummi Pizza\n                </Typography>\n                <Typography\n                    variant=\"subtitle1\"\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                >\n                    Your best decision!\n                </Typography>\n                <Copyright />\n            </footer>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ...state.cart,\n    ...state.auth,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateCart: (products) => dispatch(actions.updateCart(products)),\n        clearCart: () => dispatch(actions.clearCart()),\n        removeCartItem: (item) => dispatch(actions.removeFromCart(item)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage)\n","import axios from 'axios'\n\nexport const getProducts = () =>\n    new Promise((resolve, reject) => {\n        axios\n            .get('/v1/shop/products')\n            .then((products) => {\n                resolve(products.data)\n            })\n            .catch((err) => {\n                reject(err)\n            })\n    })\n\nexport const takeOrder = (data) =>\n    new Promise((resolve, reject) => {\n        axios\n            .post('/v1/shop/orders', data)\n            .then((res) => {\n                resolve(res)\n            })\n            .catch((err) => {\n                reject(err)\n            })\n    })\n","import React from 'react'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport Homepage from './pages/Homepage'\nimport './App.css'\n\nfunction App() {\n    return (\n        <>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" component={Homepage} />\n                </Switch>\n            </BrowserRouter>\n        </>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport axios from 'axios'\nimport store from './store'\nimport './index.css'\nimport './styles/styles.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\naxios.defaults.baseURL = 'https://the-yummi-pizza-backend.herokuapp.com'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}